                                 - isr-stubs -                        Page    1

    1                           //--------------------------------------------
                                ----------------------------------
    2                           // @file hal/micro/cortexm3/isr-stubs.s79
    3                           // @brief Stubs for all exception handlers
                                 (ISRs)
    4                           // 
    5                           // NOTE: You should NOT have to change this
                                 file to instatiate your own ISR!
    6                           //
    7                           // By providing a *weak* function here, every
                                 vector in the interrupt table is
    8                           // guaranteed to be defined.  These functions
                                 will be overridden during link
    9                           // time whenever the same function (symbol)
                                 name is used normally in another
   10                           // source file.
   11                           //
   12                           // RESULT:  Simply define whichever ISRs you
                                 need in your application and this
   13                           // file will fill in the gaps during
                                 linking.
   14                           //
   15                           // Author: Brooks Barrett
   16                           // Copyright 2007 by Ember Corporation. All
                                 rights reserved.                *80*
   17                           //--------------------------------------------
                                ----------------------------------
   18                           
   19                           //Normally the default NVIC_CONFIG file would
                                 be defined in the PLATFORM_HEADER
   20                           //but this assembly file does not include the
                                 PLATFORM_HEADER (it can't
   21                           //because this is assembly, and the header is
                                 for c).
   22                           #ifndef NVIC_CONFIG
   23                             #if (defined CORTEXM3_EZR32LG)
   24                               #define NVIC_CONFIG "hal/micro/cortexm3/ef
                                m32/ezr32lg/nvic-config.h"
   25                             #elif (defined CORTEXM3_EZR32WG)
   26                               #define NVIC_CONFIG "hal/micro/cortexm3/ef
                                m32/ezr32wg/nvic-config.h"
   27                             #elif (defined CORTEXM3_EZR32HG)
   28                               #define NVIC_CONFIG "hal/micro/cortexm3/ef
                                m32/ezr32hg/nvic-config.h"
   29                             #elif defined (CORTEXM3_EFR32_MICRO)
   30                               #define NVIC_CONFIG "hal/micro/cortexm3/ef
                                m32/efr32/nvic-config.h"
   31                             #endif
   32                           #endif
   33                           #include "../compiler/asm.h"
   34                           
   35                           #define SEGMENT() \
   37                           #define SEGMENT2() \
   39                           // NOTE: Any use of white space in this file
                                 is ignored by the preprocessor.
   40                           //       Since assembly files have white space
                                 requirements, the white space
   41                           //       needed is implemented in the
                                 nvic-config.h file itself.
   42                           
   43                           #define EXCEPTION(vectorNumber, functionName,
                                 priorityLevel, subpriority) \
   45                           #define PERM_EXCEPTION(vectorNumber,
                                 functionName, priorityLevel)
   46                           #include NVIC_CONFIG
   47                           #undef  PERM_EXCEPTION
   48                           #undef  EXCEPTION
   49                           
   50                           
   51                           
   52                           #define EXCEPTION(vectorNumber, functionName,
                                 priorityLevel, subpriority) \
   54                           #define PERM_EXCEPTION(vectorNumber,
                                 functionName, priorityLevel)
   55                           #include NVIC_CONFIG
   56                           #undef  PERM_EXCEPTION
   57                           #undef  EXCEPTION
   58                           
                                 - isr-stubs -                        Page    2

   59                           
   60                           // Every function defined above will reference
                                 the following code
   61                           // Since each function is still defined
                                 PUBWEAK with its own segment, the
   62                           // linker will still do it's job and stub out
                                 only the functions that need it.
   63                           // By having all the stubs reference the same
                                 code, we save 96 bytes!
   64                                   __IMPORT__ uninitializedIsr
   65    00000000 ........              B   uninitializedIsr
   66                           
   67                           
   68                                   __END__
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 4          #
##############################



