/*
 * B2Bprotocol.h
 *
 *  Created on: Nov 21, 2016
 *      Author: Chinmay Shah
 */

#ifndef B2BPROTOCOL_B2BPROTOCOL_H_
#define B2BPROTOCOL_B2BPROTOCOL_H_


//#define startTypeLenght 2
#define commandTypeLenght 2
#define interfaceTypeLenght 3
#define sensorTypeLenght 3
#define sensorIDLenght
#define dataLenght 2
//define stopTypeLenght 2

#define START_BYTE '$'
#define STOP_BYTE '#'

enum

//structure from frame for packet data (Response)
typedef struct packetFormat{
	unsigned char startType[];
	unsigned char commandType[commandTypeLenght];
	unsigned char interface[interfaceTypeLenght];
	//flagPacket FP;
	unsigned char sensorType[sensorTypeLength];
	unsigned char sensorID[sensorIDLength];
	unsigned char destnAddress;
	unsigned char srcAddress;
	//unsigned char originAddress;
	float data[dataLength];
	unsigned char stop;
}packetData;


//Array contents
typedef enum PDA{
	start,
	FPlength,
	type,
	packetNumber,
	prsntAddress,//Present Packet transmission
	originAddress,//Original Packet transmission
	//timestamp,
	//Add all new data above this  as Floating point data address (conversion) depends on destAddress
	destAddress,
	dataSize,
	//Data of Matrix
}packetData_array;

//structure from frame for packet data(Request)
typedef struct PDR{
	unsigned char start;
	unsigned char FPlength;
	unsigned char type;
	unsigned char packetNumber;
	unsigned char prsntAddress;
	unsigned char originAddress;
	unsigned char destAddress;
	unsigned char stop;
}packetReq;

#endif /* B2BPROTOCOL_B2BPROTOCOL_H_ */
